name: Rust

on:
  push:
    branches: [ master]
  pull_request:
    branches: [ master, dev]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name : build-latest-stable
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build --verbose --release

  buildmsrv:
    name: build-nightly
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust 1.55 toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.55
          override: true
      - name: build
        run: cargo build --release

  buildnightly:
    name: build-nightly
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - name: build
        run: cargo build --release

  unittest:
    name: Unit & integration tests
    runs-on: ubuntu-20.04
    steps:

    - uses: actions/checkout@v2

    - run: './ressources/install_all_compilers_ci.sh'

    - uses: dlang-community/setup-dlang@v1



    - name: Unit tests
      run: cargo test --release --features ignore_in_ci

    - name: Integration tests
      run: cargo test --release --features ignore_in_ci --test integration




  install:
    name: install (download)
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Installation tests
      run: ./install.sh


 
  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: './ressources/install_all_compilers_ci.sh'
      - uses: dlang-community/setup-dlang@v1

      - name: Install Rust
        run: rustup component add llvm-tools-preview --toolchain stable-x86_64-unknown-linux-gnu
      - name: Install cargo-llvm-cov
        run: curl -LsSf https://github.com/taiki-e/cargo-llvm-cov/releases/latest/download/cargo-llvm-cov-x86_64-unknown-linux-gnu.tar.gz | tar xzf - -C ~/.cargo/bin
      - name: clean
        run: cargo llvm-cov clean --workspace
      - name: Generate code coverage for unit test
        run: cargo llvm-cov --features ignore_in_ci --workspace --no-report
      - name: Generate code coverage for integration tests
        run: cargo llvm-cov --lcov --no-report --test integration
      - name: Aggregate reports
        run: cargo llvm-cov --no-run --lcov --output-path lcov.info
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          files: lcov.info
          fail_ci_if_error: false
