name: Rust

on:
  push:
    branches: [ master, dev]
  pull_request:
    branches: [ master, dev]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name : build

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build --verbose --release

  unittest:
    name: unit tests
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v2

    - uses: airvzxf/cache-anything-new-action@v1.0.1
      with:
        script: '../../ressources/install_all_compiler_ci.sh'
        is_cached: ${{ steps.cache-id.outputs.cache-hit }}
        cache: ${{ runner.temp }}/cache-directory-example
        snapshot: '/'
        exclude: '/boot /data /dev /mnt /proc /run /sys'

    - uses: dlang-community/setup-dlang@v1



    - name: Unit tests
      run: cargo test --features ignore_in_ci




  install:
    name: install (download)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Installation tests
      run: ./install.sh


 

  codecov:
    name : codecov
    runs-on: ubuntu-latest
    steps:
    - name : allow add cargo to path
      run: echo "ACTIONS_ALLOW_UNSECURE_COMMANDS=true" >> $GITHUB_ENV

    - name: Checkout repository
      uses: actions/checkout@v2

    - uses: airvzxf/cache-anything-new-action@v1.0.1
      with:
        script: '../../ressources/install_all_compiler_ci.sh'
        is_cached: ${{ steps.cache-id.outputs.cache-hit }}
        cache: ${{ runner.temp }}/cache-directory-example
        snapshot: '/'
        exclude: '/boot /data /dev /mnt /proc /run /sys'

    - uses: dlang-community/setup-dlang@v1


   

    - name: Code coverage
      uses: actions-rs/tarpaulin@v0.1.0
      with:
        args: --features ignore_in_ci --exclude-files src/interpreters/example.rs -- --test-threads=1

    - name: Upload to codecov.io
      uses: codecov/codecov-action@v1.0.2
      with:
          token: ${{secrets.CODECOV_TOKEN}}


